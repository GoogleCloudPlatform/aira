"""Add organization and groups, fixing users to have role directly

Revision ID: e8d7b15c2a48
Revises: 2814eb6402f3
Create Date: 2023-05-03 17:42:47.084503+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e8d7b15c2a48'
down_revision = '2814eb6402f3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('grade', sa.String(length=50), nullable=False),
    sa.Column('shift', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_organization_id'), 'groups', ['organization_id'], unique=False)
    op.drop_index('ix_role_user_role_id', table_name='role_user')
    op.drop_index('ix_role_user_user_id', table_name='role_user')
    op.drop_table('role_user')
    op.add_column('users', sa.Column('group_id', sa.UUID(), nullable=True))
    op.add_column('users', sa.Column('role_id', sa.UUID(), nullable=False))
    op.create_index(op.f('ix_users_group_id'), 'users', ['group_id'], unique=False)
    op.create_index(op.f('ix_users_role_id'), 'users', ['role_id'], unique=False)
    op.create_foreign_key(None, 'users', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_role_id'), table_name='users')
    op.drop_index(op.f('ix_users_group_id'), table_name='users')
    op.drop_column('users', 'role_id')
    op.drop_column('users', 'group_id')
    op.create_table('role_user',
    sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_user_role_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='role_user_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'user_id', name='role_user_pkey')
    )
    op.create_index('ix_role_user_user_id', 'role_user', ['user_id'], unique=False)
    op.create_index('ix_role_user_role_id', 'role_user', ['role_id'], unique=False)
    op.drop_index(op.f('ix_groups_organization_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_table('organizations')
    # ### end Alembic commands ###
