"""Add columns to user

Revision ID: c25b24a75bec
Revises: e8d7b15c2a48
Create Date: 2023-05-12 21:46:07.892712+00:00

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql as psql

# revision identifiers, used by Alembic.
revision = "c25b24a75bec"
down_revision = "e8d7b15c2a48"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    status_enum_postgres = psql.ENUM(
        "PASSWORD", "FIREBASE", name="usertype", create_type=False
    )
    status_enum_postgres.create(op.get_bind(), checkfirst=False)
    op.add_column(
        "users", sa.Column("customer_id", sa.String(length=100), nullable=True)
    )
    op.add_column(
        "users",
        sa.Column(
            "type",
            status_enum_postgres,
            nullable=False,
        ),
    )
    op.add_column("users", sa.Column("password", sa.String(length=100), nullable=True))
    op.drop_constraint("users_firebase_id_key", "users", type_="unique")
    op.alter_column(
        "users", "firebase_id", new_column_name="external_id", nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "firebase_id", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("users", "password")
    op.drop_column("users", "type")
    op.drop_column("users", "customer_id")
    op.alter_column("users", "external_id", new_column_name="firebase_id")
    # ### end Alembic commands ###
