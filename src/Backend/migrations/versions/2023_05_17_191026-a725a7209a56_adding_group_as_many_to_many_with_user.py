"""Adding group as many to many with user

Revision ID: a725a7209a56
Revises: 818ae2edd204
Create Date: 2023-05-17 19:10:26.610964+00:00

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "a725a7209a56"
down_revision = "818ae2edd204"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_groups",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "group_id"),
    )
    op.drop_index("ix_users_group_id", table_name="users")
    op.create_unique_constraint(None, "users", ["external_id"])
    op.drop_constraint("users_group_id_fkey", "users", type_="foreignkey")
    op.drop_column("users", "group_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("group_id", sa.UUID(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        "users_group_id_fkey",
        "users",
        "groups",
        ["group_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "users", type_="unique")
    op.create_index("ix_users_group_id", "users", ["group_id"], unique=False)
    op.drop_table("users_groups")
    # ### end Alembic commands ###
