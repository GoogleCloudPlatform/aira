[tool.poetry]
name = "stt-exams"
version = "1.9.0"
description = ""
authors = ["Gustavo Albino <gustavo@radhark.tech>"]
readme = "README.md"
packages = [{include = "api", from = "src"}]

[tool.poetry.dependencies]
python = "3.11.*"
unidecode = "^1.3.6"
ffmpeg-python = "^0.2.0"
google-cloud-speech = "^2.21.0"
google-cloud-storage = "^2.11.0"
google-auth = "^2.22.0"
fastapi = "^0.110.0"
fastapi-injector = "^0.5.4"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
aiohttp = "^3.9.4"
injector = "^0.20.1"
structlog = "^23.1.0"
pydantic = {extras = ["email"], version = "^1.10.9"}
google-cloud-secret-manager = "^2.20.0"
aiocache = "^0.12.1"
alembic = "^1.13.1"
sqlalchemy = {extras = ["postgresql_asyncpg", "postgresql_psycopg2binary", "asyncio"], version = "^2.0.25"}
python-dateutil = "^2.8.2"
firebase-admin = "^6.5.0"
fastapi-pagination = "^0.12.19"
types-google-cloud-ndb = "^2.3.0.20240311"
google-api-python-client = "^2.95.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
types-passlib = "^1.7.7.20240106"
google-cloud-pubsub = "^2.18.1"
google-cloud-bigquery = "^3.19.0"
opentelemetry-api = "^1.18.0"
opentelemetry-sdk = "^1.18.0"
opentelemetry-exporter-gcp-trace = "^1.5.0"
opentelemetry-instrumentation = "^0.41b0"
opentelemetry-instrumentation-fastapi = "^0.41b0"
opentelemetry-exporter-otlp-proto-grpc = "^1.18.0"
opentelemetry-instrumentation-aiohttp-client = "^0.41b0"
opentelemetry-instrumentation-asyncpg = "^0.41b0"
opentelemetry-instrumentation-grpc = "^0.41b0"
opentelemetry-instrumentation-logging = "^0.41b0"
opentelemetry-instrumentation-requests = "^0.41b0"
opentelemetry-instrumentation-sqlalchemy = "^0.41b0"
opentelemetry-propagator-gcp = "^1.5.0"
opentelemetry-resourcedetector-gcp = "^1.5.0a0"
httpx = "^0.24.1"
looker-sdk = "^24.0.0"
pyjwt = {version = "^2.8.0", extras = ["crypto"]}
sentry-sdk = {extras = ["fastapi"], version = "^2.1.1"}
phonemizer = "^3.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
pytest-mypy = "^0.10.3"
pytest-ruff = "^0.3.1"
hypothesis = "^6.97.3"
pytest-socket = "^0.7.0"
pytest-xdist = "^3.6.1"
pytest-dotenv = "^0.5.2"
pytest-env = "^1.1.3"
ruff = "^0.4.1"
mypy = "^1.10.0"


[tool.poetry.group.build.dependencies]
pex = "^2.3.1"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = 'py311'
exclude = [
    "migrations",
    ".pytest_cache",
    ".mypy_cache",
    "__pypackages__",
    "__pycache__",
    ".git"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "PL",
    "UP",
    "SIM",
]
ignore = ["PLR2004", "PLR0913", "B008", "C408"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = "tests"
env_files = [".env"]
env = [
    "PYTHONASYNCIODEBUG=1",
    "_TEST_MODE=1",
    "_EXPORT_TO=none"
]
markers = ["disable_autouse", "database"]
filterwarnings = [
    "error::pytest.PytestUnraisableExceptionWarning",
    "ignore::sqlalchemy.exc.SAWarning",
    "ignore::DeprecationWarning",
    "ignore:unclosed transport <_SelectorSocketTransport:ResourceWarning",
]
